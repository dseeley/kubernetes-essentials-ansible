---

k8s_version: v1.21.0

k8s_network:
  cluster_cidr: 10.234.0.0/16         # Overall pod network range for entire cluster
  node_subnet_len: 24                 # portion of cluster_cidr, per node
  service_ip_cidr: 10.233.0.0/18      # ip range for cluster services
  dns_ip: 10.233.0.10                 # Cluster DNS resolution (coredns).  Must be from {{k8s_network.service_ip_cidr}}
  cluster_tld: "kubernetes"           # Cluster dns TLD

flannel_version: v0.14.0

coredns_image: coredns/coredns:1.8.4

kube_dashboard_image: kubernetesui/dashboard:v2.3.1

edge_ingress:
  lb_controller: ""    # haproxy-ingress, GCP, AWS
  vip_mgr: ""          # <empty>, kube-keepalived-vip
  node_role_name: "edge-ingress"
  vipname: "{{cluster_name}}-lbvip"
  vip: 192.168.1.49
  vip_prefix: 25
  extvip: 192.168.1.49
  extvip_prefix: 25

apiserver:
  lb_controller: ""
  vip_mgr: ""
  secure_vip_port: 443
  vip: 192.168.1.48
  vip_prefix: 25
  extvip: 192.168.1.48
  extvip_prefix: 25
  hostname: "{{cluster_name}}-apiservervip"
  inturl: "https://192.168.1.48"
  exturl: "{% if cluster_vars.dns_server is defined %}https://{{cluster_name}}-apiservervip.{{cluster_vars.dns_nameserver_zone}}{% endif %}"

k8s_bin_dir: /opt/kubernetes
k8s_config_dir: /etc/kubernetes
k8s_cert_dir: "{{k8s_config_dir}}/pki"
k8s_home_kube_dir: "${HOME}/.kube"     # Use this instead of ~/.kube for localhost, because ~ is not expanded by kubectl

playbook_ca_yaml: "{{playbook_dir}}/cluster_defs/{{ cloud_type }}/{{ clusterid }}/{{ region }}/{{ buildenv }}/_ssl/ca.yml"
playbook_certs_k8s_file: "{{playbook_dir}}/cluster_defs/{{ cloud_type }}/{{ clusterid }}/{{ region }}/{{ buildenv }}/_ssl/k8s_certs_{{cluster_suffix}}.yml"

# all certificates for cluster
ca_crt_filepath: "{{k8s_cert_dir}}/ca-crt.pem"
ca_key_filepath: "{{k8s_cert_dir}}/ca-key.pem"
apiserver_crt_filepath: "{{k8s_cert_dir}}/apiserver-crt.pem"
apiserver_key_filepath: "{{k8s_cert_dir}}/apiserver-key.pem"
admin_crt_filepath: "{{k8s_cert_dir}}/admin-crt.pem"
admin_key_filepath: "{{k8s_cert_dir}}/admin-key.pem"
serviceaccount_crt_filepath: "{{k8s_cert_dir}}/serviceaccount-crt.pem"
serviceaccount_key_filepath: "{{k8s_cert_dir}}/serviceaccount-key.pem"

etcd_version: v3.4.15
etcd:
  client_cert_file: &etcd_cert_file "{{k8s_cert_dir}}/etcd-crt.pem"
  client_key_file: &etcd_key_file "{{k8s_cert_dir}}/etcd-key.pem"
  client_trusted_ca_file: &etcd_trusted_ca_file "{{ca_crt_filepath}}"
  peer_cert_file: *etcd_cert_file
  peer_key_file: *etcd_key_file
  peer_trusted_ca_file: *etcd_trusted_ca_file
  download_url: "https://github.com/etcd-io/etcd/releases/download/{{ etcd_version }}/etcd-{{ etcd_version }}-linux-{{'amd64' if ansible_architecture == 'x86_64' else 'arm64' if ansible_architecture == 'aarch64' else ansible_architecture}}.tar.gz"
  bin_dir: /usr/local/bin
  data_dir: /var/cache/etcd/state
  user: etcd
  client_port: 2379
  peer_port: 2380
