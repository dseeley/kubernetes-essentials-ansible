---

- name: clusterverse | Deploy the cluster
  hosts: localhost
  gather_facts: false
  tasks:
    - { name: "Get dependent roles via ansible-galaxy", local_action: "command ansible-galaxy role install --ignore-errors -fr requirements.yml", tags: ["always"] }

    - block:
        - { include_role: { name: "clusterverse/_dependencies", apply: {tags: ["always"]} }, tags: ["always"] }
        - { include_role: { name: "kubernetes/k8s_cluster/clean", apply: { tags: ["always"]} }, tags: ["always"] }
        - { include_role: { name: "clusterverse/clean", apply: {tags: ["clusterverse_clean"]} }, tags: ["clusterverse_clean"] }
      when: "clean is defined"

    - { include_role: { name: "clusterverse/create", apply: { tags: ["clusterverse_create"] } }, tags: ["clusterverse_create"] }
    - { include_role: { name: "clusterverse/dynamic_inventory", apply: { tags: ["clusterverse_dynamic_inventory"] } }, tags: ["clusterverse_dynamic_inventory"] }
    - { name: "clusterverse | Copy ansible_ssh_private_key_file", local_action: "copy content={{cluster_vars[buildenv].ssh_connection_cfg.host.ansible_ssh_private_key_file}} dest='id_rsa_ansible_ssh_private_key_file' mode='0600'", when: "cluster_vars[buildenv].ssh_connection_cfg.host.ansible_ssh_private_key_file is defined", no_log: yes, tags: ["always"] }
    - { name: "clusterverse | Copy bastion sshkey", local_action: "copy content={{cluster_vars[buildenv].ssh_connection_cfg.bastion.ssh_priv_key}} dest='id_rsa_bastion' mode='0600'", when: "cluster_vars[buildenv].ssh_connection_cfg.bastion.ssh_priv_key is defined", no_log: yes, tags: ["always"] }

- name: clusterverse | Wait for SSH connections
  hosts: all
  gather_facts: false
  tasks: [ {wait_for_connection: "", tags: ["always"] } ]

- name: clusterverse | Configure the cluster
  hosts: all:!not_target_hosts
  gather_facts: false
  tasks: [ { include_role: { name: "clusterverse/config", apply: { tags: ["clusterverse_config"]} }, tags: ["clusterverse_config"] } ]


###### Kubernetes roles
- name: Kubernetes | load clusterverse deps if not included already
  hosts: all
  tasks:
    - { include_role: { name: "clusterverse/_dependencies", apply: { tags: ["always"] } }, tags: ["always"], when: "'clusterverse_config' not in ansible_run_tags" }      # If we --skip-tags=clusterverse_config, this will ensure the variables from /cluster_defs are loaded.
    - { include_role: { name: "clusterverse/cluster_hosts", apply: { tags: ["always"] } }, tags: ["always"], when: "'clusterverse_create' not in ansible_run_tags" }      # If we --skip-tags=clusterverse_create, this will ensure cluster_suffix is defined.

- name: Kubernetes | ssl_ownca
  hosts: all
  tasks:
    - assert: { that: "'dseeley.ansible_vault_pipe' in galaxy_collections.keys()", fail_msg: "Please ensure the dseeley.ansible_vault_pipe collection is installed:  ansible-galaxy collection install dseeley.ansible_vault_pipe (or ansible-galaxy collection install --ignore-errors -fr requirements.yml)" }
      vars: { galaxy_collections: "{{lookup('pipe', 'ansible-galaxy collection list --format=json', errors='ignore') | from_json | json_query(\"*\") | combine }}" }
      tags: ["kubernetes_ssl_ownca"]
      delegate_to: localhost
      run_once: true

    - { include_role: { name: "kubernetes/ssl_ownca", apply: { tags: ["kubernetes_ssl_ownca"] } }, tags: ["kubernetes_ssl_ownca"] }
    - { include_vars: "{{ item }}", with_first_found: [{ files: ["{{playbook_certs_k8s_file}}"], skip: true }], tags: ["always"] }

- name: Kubernetes | localhostconfig
  hosts: localhost
  connection: local
  tasks: [{ include_role: { name: "kubernetes/localhostconfig", apply: { tags: ["kubernetes_localhostconfig"] } }, tags: ["kubernetes_localhostconfig"] }]

- name: Kubernetes | etcd
  hosts: etcd
  tasks: [{ include_role: { name: "kubernetes/etcd", apply: { tags: ["kubernetes_etcd"] } }, tags: ["kubernetes_etcd"] }]

- name: Kubernetes | Ensure the variables from /cluster_defs are loaded (in particular the new etcd certificate facts)
  hosts: all
  gather_facts: false
  tasks: [{ include_role: { name: "clusterverse/_dependencies", apply: { tags: ["always"] } }, tags: ["always"] }]

- name: Kubernetes | k8s cluster common roles
  hosts: controller:node-worker:node-edge
  tasks: [{ include_role: { name: "kubernetes/k8s_cluster/common", apply: { tags: ["k8s_cluster_common"] } }, tags: ["k8s_cluster_common"] }]

- name: Kubernetes | k8s cluster controller
  hosts: controller
  tasks: [{ include_role: { name: "kubernetes/k8s_cluster/controller", apply: { tags: ["k8s_cluster_controller"] } }, tags: ["k8s_cluster_controller"] }]

- name: Kubernetes | k8s cluster node-worker and node-edge
  hosts: node-worker:node-edge
  tasks: [{ include_role: { name: "kubernetes/k8s_cluster/node", apply: { tags: ["k8s_cluster_nodes"] } }, tags: ["k8s_cluster_nodes"] }]

- name: Kubernetes | Install the k8 addons and, optionally, test applications
  hosts: controller
  tasks:
    - { include_role: { name: "kubernetes/k8s_cluster/addon", apply: { tags: ["k8s_cluster_controller_addon"] } }, tags: ["k8s_cluster_controller_addon"] }
    - { include_role: { name: "kubernetes/k8s_cluster/testapps", apply: { tags: ["k8s_cluster_testapps"] } }, tags: ["k8s_cluster_testapps"], when: "testapps is defined" }
######


- name: clusterverse | Perform cluster readiness operations
  hosts: localhost
  tasks: [ { include_role: { name: "clusterverse/readiness", apply: { tags: ["clusterverse_readiness"]} }, tags: ["clusterverse_readiness"] } ]
