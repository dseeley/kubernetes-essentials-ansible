---

- name: node/config/containerd | Add Kubernetes apt key
  become: yes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg

- name: node/config/containerd | Adding Kubernetes repository
  become: yes
  apt_repository:
    repo: deb https://packages.cloud.google.com/apt/ kubernetes-xenial main
    state: present

- name: node/config/containerd | install apt packages
  become: yes
  apt:
    update_cache: yes
    name: ['runc', 'containerd', 'cri-tools', 'kubernetes-cni']
    state: present
  notify: ["restart containerd"]

#- name: node/config/containerd | Configure CNI Networking / Create the bridge network configuration file
#  become: yes
#  copy:
#    content: |
#      {
#        "cniVersion": "0.4.0",
#        "name": "bridge",
#        "type": "bridge",
#        "bridge": "cnio0",
#        "isGateway": true,
#        "ipMasq": true,
#        "ipam": {
#          "type": "host-local",
#          "ranges": [
#            [{"subnet": "{{k8s_network.cluster_cidr}}"}]
#          ],
#          "routes": [{"dst": "0.0.0.0/0"}]
#        }
#      }
#    dest: "/etc/cni/net.d/10-bridge.conf"
#    force: yes
#  notify: ["restart containerd"]
#
#- name: node/config/containerd | Configure CNI Networking / Create the loopback network configuration file
#  become: yes
#  copy:
#    content: |
#      {
#        "cniVersion": "0.4.0",
#        "name": "lo",
#        "type": "loopback"
#      }
#    dest: "/etc/cni/net.d/99-loopback.conf"
#    force: yes
#  notify: ["restart containerd"]


- name: node/config/containerd | create containerd configuration  directory
  become: yes
  file: path=/etc/containerd state=directory

- name: node/config/containerd | Create the containerd configuration file
  become: yes
  copy:
    content: |
      [plugins]
        [plugins.cri.containerd]
          snapshotter = "overlayfs"
          [plugins.cri.containerd.default_runtime]
            runtime_type = "io.containerd.runtime.v1.linux"
            runtime_engine = "/usr/sbin/runc"
            runtime_root = ""
    dest: "/etc/containerd/config.toml"
    force: yes
  notify: ["restart containerd"]

- name: node/config/containerd | Create the containerd.service systemd unit file
  become: yes
  copy:
    content: |
      [Unit]
      Description=containerd container runtime
      Documentation=https://containerd.io
      After=network.target

      [Service]
      ExecStartPre=/sbin/modprobe overlay
      ExecStart=/bin/containerd
      Restart=always
      RestartSec=5
      Delegate=yes
      KillMode=process
      OOMScoreAdjust=-999
      LimitNOFILE=1048576
      LimitNPROC=infinity
      LimitCORE=infinity

      [Install]
      WantedBy=multi-user.target
    dest: "/etc/systemd/system/containerd.service"
    force: yes
  notify: ["reload systemd", "restart containerd"]