---

- name: controller/config/scheduler | Create certificate/ key
  include_tasks: sslcerts-scheduler.yml

- name: controller/config/scheduler | create config directory
  become: yes
  file: path={{k8s_config_dir}}/ state=directory

- name: controller/config/scheduler | write out kubeconfig
  become: yes
  copy:
    content: |
      apiVersion: v1
      clusters:
      - cluster:
          certificate-authority-data: {{ ssl_ca['ca-crt.pem'] | b64encode }}
          server: "{% if apiserver.url is defined and apiserver.url != '' %}{{ apiserver.url }}{% elif apiserver.keepalived.vip_cidr is defined and apiserver.keepalived.vip_cidr != '' %}https://{{apiserver.keepalived.vip_cidr | ipaddr('address')}}{% endif %}:{{apiserver.secure_port}}"
        name: {{cluster_name}}
      contexts:
      - context:
          cluster: {{cluster_name}}
          user: system:kube-scheduler
        name: default
      current-context: default
      kind: Config
      preferences: {}
      users:
      - name: system:kube-scheduler
        user:
          client-certificate-data: {{ k8s_certs['scheduler-crt.pem'] | b64encode }}
          client-key-data: {{ k8s_certs['scheduler-key.pem'] | b64encode }}
    dest: "{{k8s_config_dir}}/kube-scheduler.kubeconfig"
    force: yes
  notify: ["restart kube-scheduler"]

#- name: controller/config/scheduler | Create the kube-scheduler-config.yaml configuration file
#  become: yes
#  copy:
#    content: |
#      kind: KubeSchedulerConfiguration
#      apiVersion: kubescheduler.config.k8s.io/v1beta1
#      clientConnection:
#        kubeconfig: "{{ k8s_config_dir }}/kube-scheduler.kubeconfig"
#      leaderElection:
#        leaderElect: true
#    dest: "{{ k8s_config_dir }}/kube-scheduler.yaml"
#    force: yes
#  notify: ["restart kube-scheduler"]

- name: controller/config/scheduler | Create the kube-scheduler.service systemd unit file
  become: yes
  copy:
    content: |
      [Unit]
      Description=Kubernetes Scheduler
      Documentation=https://github.com/kubernetes/kubernetes

      [Service]
      ExecStart={{k8s_bin_dir}}/kube-scheduler --kubeconfig={{ k8s_config_dir }}/kube-scheduler.kubeconfig --leader-elect=true --v=2
      Restart=on-failure
      RestartSec=5

      [Install]
      WantedBy=multi-user.target
    dest: "/etc/systemd/system/kube-scheduler.service"
    force: yes
  notify: ["reload controller systemd", "restart kube-scheduler"]
