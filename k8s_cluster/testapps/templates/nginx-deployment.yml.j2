---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: default
spec:
  replicas: 6
  selector:
    matchLabels:
      app: nginx-test
  template:
    metadata:
      labels:
        app: nginx-test
    spec:
{#      affinity:#}
{#        podAntiAffinity:#}
{#          preferredDuringSchedulingIgnoredDuringExecution:#}
{#            - podAffinityTerm:#}
{#                labelSelector:#}
{#                  matchExpressions: [ { 'key': 'app', 'operator': 'In', 'values': ['nginx-test'] } ]#}
{#                topologyKey: "topology.kubernetes.io/zone"#}
{#              weight: 100#}
{#            - podAffinityTerm:#}
{#                labelSelector:#}
{#                  matchExpressions: [ { 'key': 'app', 'operator': 'In', 'values': ['nginx-test'] } ]#}
{#                topologyKey: "kubernetes.io/hostname"#}
{#              weight: 100#}
      topologySpreadConstraints:
        - maxSkew: 1    # ignored as we're setting whenUnsatisfiable: ScheduleAnyway
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector: { matchLabels: { app: nginx-test } }
        - maxSkew: 1    # ignored as we're setting whenUnsatisfiable: ScheduleAnyway
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector: { matchLabels: { app: nginx-test } }
      initContainers:
        - name: configworkdir
          image: busybox
          command: [ "sh", "-c", 'echo "<h1>\$(hostname)</h1>" > /workdir/index.html' ]
          volumeMounts:
            - name: workdir
              mountPath: "/workdir"
      containers:
        - name: nginx-test
          image: nginx:latest
#          command: [ "sh", "-c", 'sed -E "s/^(\\s+)(location \\/ \\{)$/\\1\\2\n\\1\\1sendfile off;/" /etc/nginx/conf.d/default.conf' ]
          volumeMounts:
            - name: workdir
              mountPath: /usr/share/nginx/html
      volumes:
        - name: workdir
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-test
  namespace: default
  labels:
    app: nginx-test
spec:
  selector:
    app: nginx-test
  ports:
  - port: 80
    protocol: TCP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-test
  namespace: default
  annotations:
    ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: haproxy
  rules:
    - http:
        paths:
          - path: /{% if cluster_vars.dns_user_domain is not defined  or  cluster_vars.dns_user_domain == '' %}nginx{% endif %}{{''}}
            pathType: Prefix
            backend:
              service:
                name: nginx-test
                port:
                  number: 80
      {% if cluster_vars.dns_user_domain is defined and cluster_vars.dns_user_domain != "" %}host: "nginx-test.{{cluster_vars.dns_user_domain}}"{% endif %}
