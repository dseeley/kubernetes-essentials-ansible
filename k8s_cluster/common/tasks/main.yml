---

- name: common | set resolv.conf dns search domain
  block:
    - name: common | set resolv.conf dns search domain
      lineinfile:
        path: /etc/systemd/resolved.conf
        regexp: '^#?Domains=.*'
        line: 'Domains={{search_domain | join(" ")}}'

    - name: common | restart systemd-resolved
      service:
        name: systemd-resolved
        state: restarted
  become: yes
  vars:
    search_domain: ["default.svc.{{k8s_network.cluster_tld}}", "svc.{{k8s_network.cluster_tld}}", "{{k8s_network.cluster_tld}}", "{% if cluster_vars.dns_cloud_internal_domain is defined and cluster_vars.dns_cloud_internal_domain != '' -%}{{cluster_vars.dns_cloud_internal_domain}}{% endif -%}", "{% if cluster_vars.dns_user_domain is defined and cluster_vars.dns_user_domain != '' -%}{{cluster_vars.dns_user_domain}}{% endif -%}"]


- name: common | write out hosts to /etc/hosts when no DNS in use
  become: yes
  blockinfile:
    dest: "/etc/hosts"
    block: "{{ hostvars | json_query(\"*.join(' ', [ansible_default_ipv4.address, ansible_hostname])\") | sort | join('\n') }}"
    state: present
    create: yes
    marker: "# Ansible inventory hosts {mark}"
  when: (cluster_vars.dns_server is not defined  or  cluster_vars.dns_server == '')  or  (cluster_vars.dns_user_domain is not defined  or  cluster_vars.dns_user_domain == "")

- name: common | Allow ip_forward (net.ipv4.ip_forward=1)
  become: yes
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
    state: present
    reload: yes

- name: "common | Enable bridge netfilter manually when a bridging CNI is used (https://github.com/kubernetes/kubernetes/issues/24018)"
  block:
    - name: common | load the br-netfilter module
      become: yes
      modprobe:
        name: br-netfilter
        state: present

    - name: common | (net.bridge.bridge-nf-call-iptables=1)
      become: yes
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        sysctl_set: yes
        state: present
        reload: yes
  when: flannel_version is defined  and  flannel_version != ""